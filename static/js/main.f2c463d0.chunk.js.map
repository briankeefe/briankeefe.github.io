{"version":3,"sources":["logo.svg","images/space.jpg","images/Burger.jpg","fonts/Cascadia.ttf","layout/TopBar.js","content/colors.js","App.js","serviceWorker.js","CopyApp.js","content/projectContent.js","Projects.js","content/internships.js","About.js","index.js"],"names":["module","exports","TopBar","AppBar","className","position","Toolbar","style","flexGrow","Box","ButtonGroup","id","variant","to","Button","size","icon","faHome","faUser","href","faGithub","colors","primary","light","dark","App","background","zIndex","top","right","Grid","container","justify","direction","alignItems","Typography","item","xs","sm","md","lg","Boolean","window","location","hostname","match","projectContent","name","desc","tech","link","ProjectPage","backgroundColor","green","ProjectContent","map","e","Card","display","CardContent","pr","marginTop","mt","CardActions","overflow","color","internships","AboutPage","p","spacing","textAlign","width","float","height","src","Profile","mb","routing","exact","path","component","About","Projects","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f2c463d0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","module.exports = __webpack_public_path__ + \"static/media/space.a4eb5f9c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Burger.c8237335.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Cascadia.8d18551f.ttf\";","import React from \"react\";\r\nimport {\r\n\tBox,\r\n\tTypography,\r\n\tPaper,\r\n\tGrid,\r\n\tAppBar,\r\n\tToolbar,\r\n\tButton,\r\n\tButtonGroup\r\n} from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faHome } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nlet TopBar = () => {\r\n\treturn (\r\n\t\t<AppBar className=\"AppBar\" position=\"static\">\r\n\t\t\t<Toolbar style={{ flexGrow: \"1\" }}>\r\n\t\t\t\t<Box style={{ flexGrow: \"1\" }} />\r\n\t\t\t\t<ButtonGroup id=\"buttons\" variant=\"text\">\r\n\t\t\t\t\t<Link className=\"link\" to=\"/\">\r\n\t\t\t\t\t\t<Button>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon size=\"2x\" icon={faHome}/>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Link className=\"link\" to=\"/about\">\r\n\t\t\t\t\t\t<Button>\r\n\t\t\t\t\t\t\t<FontAwesomeIcon size=\"2x\" icon={faUser}/>\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</Link>\r\n\t\t\t\t\t<Button href=\"http://www.github.com/briankeefe\">\r\n\t\t\t\t\t\t<FontAwesomeIcon size=\"2x\" icon={faGithub}/>\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t{/* <Link className=\"link\" to=\"/projects\">\r\n\t\t\t\t\t\t<Button>Projects</Button>\r\n\t\t\t\t\t</Link> */}\r\n\t\t\t\t</ButtonGroup>\r\n\r\n\t\t\t</Toolbar>\r\n\t\t</AppBar>\r\n\t);\r\n};\r\nexport default TopBar;\r\n","const colors = {\r\n    primary: \"#0d47a1\",\r\n    light: \"#5472d3\",\r\n    dark: \"#002171\",\r\n}\r\n\r\nexport default colors;","import \"./style.scss\";\r\nimport React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Grid,\r\n  AppBar,\r\n  Toolbar,\r\n  Button,\r\n  ButtonGroup\r\n} from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport space from \"./images/space.jpg\";\r\nimport TopBar from \"./layout/TopBar\";\r\nimport { Link } from \"react-router-dom\";\r\nimport colors from \"./content/colors\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from '@fortawesome/free-brands-svg-icons'\r\n\r\nfunction App() {\r\n  return (\r\n    <Box className=\"home-page\" style={{ background: `${colors.primary}` }}>\r\n      <Box zIndex={10} style={{ position: \"absolute\", top: 0, right: 0 }}>\r\n        <TopBar />\r\n      </Box>\r\n      <Box className=\"skewed\" />\r\n      <Box className=\"outer\">\r\n        <Grid container justify=\"center\" direction=\"column\" alignItems=\"center\">\r\n\r\n          <Box className=\"bk-box\">\r\n            <Typography\r\n              className=\"cascadia brian-keefe center\"\r\n              id=\"brian-keefe\"\r\n              variant=\"h1\"\r\n            >\r\n              Brian Keefe\r\n            </Typography>\r\n          </Box>\r\n\r\n          <Typography className=\"cascadia margin-top shadowed\" variant=\"h5\">\r\n            Software Developer\r\n          </Typography>\r\n          <Typography className=\"cascadia shadowed\" variant=\"p\">\r\n            Staples INC., Framingham MA\r\n          </Typography>\r\n\r\n          {/* <Button href=\"http://www.github.com/briankeefe\" style={{color: `${colors.dark}`}} variant=\"contained\" id=\"work-button\">\r\n              <FontAwesomeIcon size=\"3x\" icon={faGithub} /> \r\n          </Button> */}\r\n          <Grid item xs={10} sm={8} md={6} lg={4}>\r\n            <Typography\r\n              variant=\"h5\"\r\n              className=\"brian-keefe white-text about-text cascadia\"\r\n            >\r\n              \"Highly motivated developer focused on ReactJS and full stack solutions\"\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"./style.scss\";\r\nimport React from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport {\r\n\tBox,\r\n\tTypography,\r\n\tPaper,\r\n\tGrid,\r\n\tAppBar,\r\n\tToolbar,\r\n\tButton\r\n} from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport space from \"./images/space.jpg\";\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Box className=\"home-page\" style={{ backgroundImage: `url(${space})` }}>\r\n\t\t\t<AppBar className=\"AppBar\" position=\"static\">\r\n\t\t\t\t<Toolbar style={{ flexGrow: \"1\" }}>\r\n\t\t\t\t\t<Box style={{ flexGrow: \"1\" }} />\r\n\t\t\t\t\t<Button>Github</Button>\r\n\t\t\t\t\t<Button>Social</Button>\r\n\t\t\t\t\t<Button>Projects</Button>\r\n\t\t\t\t</Toolbar>\r\n\t\t\t</AppBar>\r\n\t\t\t<Box className=\"outer\">\r\n\t\t\t\t<Grid container justify=\"center\" direction=\"column\" alignItems=\"center\">\r\n\t\t\t\t\t<Typography className=\"cascadia\" id=\"brian-keefe\" variant=\"h2\">\r\n\t\t\t\t\t\tBrian Keefe\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Typography className=\"cascadia\" variant=\"h4\">\r\n\t\t\t\t\t\tDeveloper\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<Button color=\"secondary\" variant=\"contained\" id=\"work-button\">\r\n\t\t\t\t\t\tSee Bork\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Grid item xs={4} align=\"center\">\r\n\t\t\t\t\t\t<Typography variant=\"h5\" className=\"white-text about-text cascadia\">\r\n\t\t\t\t\t\t\t\"Highly motivated developer focused on ReactJS, .NET, and full\r\n\t\t\t\t\t\t\tstack solutions\"\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","let projectContent = [\r\n\t{\r\n\t\tname: \"Flashcard Application\",\r\n\t\tdesc:\r\n\t\t\t\"Full Stack application used to create and study flashcards.  The webapp is designed to run alongside a basic Express Rest Server that handles the API calls to the database to retrieve cards stored under an authenticated user.\",\r\n\t\ttech: \"ReactJS, NextJS, MongoDB, Firebase Auth, MaterialUI\",\r\n\t\tlink: \"https://github.com/briankeefe/webApp\"\r\n\t},\r\n\t{\r\n\t\tname: \"Snowday Calculator\",\r\n\t\tdesc:\r\n\t\t\t\"Basic Frontend Webapp that takes in a zip code, makes an API call to a weather service to determine the weather and projected snowfall, then outputs the predicted forecast along with a crude estimate of the chance of a snowday\",\r\n\t\ttech: \"ReactJS, Create-React-App, Material-UI\",\r\n\t\tlink: \"http://github.com/briankeefe/Snowday\"\r\n\t},\r\n\t{\r\n\t\tname: \"Sample Coding\",\r\n\t\tdesc:\r\n\t\t\t\"Samples from Project Euler and other practice coding lists.  Used as a way to develop consistent formatting and practice core concepts\",\r\n\t\ttech: \"Python, Javascript\",\r\n\t\tlink: \"http://github.com/briankeefe/Sampleboding\"\r\n\t}\r\n];\r\n\r\nexport default projectContent;\r\n","import React from \"react\";\r\nimport {\r\n\tBox,\r\n\tCard,\r\n\tCardContent,\r\n\tTypography,\r\n\tGrid,\r\n\tPaper,\r\n\tButton,\r\n\tCardActions\r\n} from \"@material-ui/core\";\r\nimport { green } from \"@material-ui/core/colors\";\r\nimport TopBar from \"./layout/TopBar\";\r\nimport SimpleSlider from \"./SimpleSlider\";\r\nimport ProjectContent from \"./content/projectContent\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nlet ProjectPage = () => {\r\n\treturn (\r\n\t\t<Box className=\"projects-page\" style={{ backgroundColor: green[100] }}>\r\n\t\t\t<TopBar />\r\n\t\t\t{ProjectContent.map(e => {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<Grid container justify=\"center\">\r\n\t\t\t\t\t\t<Grid item xs={12} md={6}>\r\n\t\t\t\t\t\t\t<Card style={{ display: \"relative\" }} className=\"project-card\">\r\n\t\t\t\t\t\t\t\t<CardContent className=\"card-content\" className=\"box\">\r\n\t\t\t\t\t\t\t\t\t<Box pr={4}>\r\n\t\t\t\t\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"card-title\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"cascadia\"\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"h4\"\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\t{e.name}\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Typography style={{ marginTop: \"8px\" }} variant=\"body1\">\r\n\t\t\t\t\t\t\t\t\t\t\tTechnology Used: <b>{e.tech}</b>\r\n\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t<Box mt={1} />\r\n\t\t\t\t\t\t\t\t\t\t<Typography variant=\"p\">{e.desc}</Typography>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t\t\t<CardActions className=\"card-actions\">\r\n\t\t\t\t\t\t\t\t\t<Box style={{ flexGrow: 1, overflow: \"hidden\" }}>\r\n\t\t\t\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"src-button\"\r\n\t\t\t\t\t\t\t\t\t\t\thref={e.link}\r\n\t\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t\tSource Code\r\n\t\t\t\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t</CardActions>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t);\r\n\t\t\t})}\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default ProjectPage;\r\n","let internships = [\r\n\t{\r\n\t\tname: \"Staples, Framingham MA (remote)\",\r\n\t\tposition: \"Rotation Software Developer (Level 1)\",\r\n\t\tdesc: \"Operated as a Level 1 Software Developer on the Identity and Access Management Team.  Responsibilities included developing intuitive and extendable front-end components, and integrating them with corresponding endpoints and payloads.  I then learned to initiate and merge pull requests from feature branches and deploy to testing environments through Jenkins pipelines.  I presented deliverable changes in demo’s with upper management, and was able to effectively communicate the benefit to the business.\"\r\n\t},\r\n\t{\r\n\t\tname: \"Optum, Boston MA\",\r\n\t\tposition: \"Software Engineering Intern (Full Stack)\",\r\n\t\tdesc:\r\n\t\t\t\"Worked collaboratively with five other interns to create a full stack web portal. In order to achieve a polished finished product, our team worked directly with the customer service representatives and established a feedback loop for constant improvements. Once we understood the needs of the user, we designed an interface in .NET Core Razor that queried secure information from a Microsoft SQL database and displayed it in an easy to read manner for customer service representatives. We then deployed this web app to AWS with functioning auto-scaling policy, and implemented end-to-end testing.\"\r\n\t},\r\n\t{\r\n\t\tname: \"Staples, Framingham MA\",\r\n\t\tposition: \"Software Engineering Intern (DevOps)\",\r\n\t\tdesc:\r\n\t\t\t\"Worked alongside full time developers as the sole summer intern of the Retail Technology Development Team. Was introduced to an agile project management environment and learned several key skills necessary to address technical issues and implement solutions. Met with colleagues daily in different environments to effectively communicate progress while setting and understanding personal and team goals. Documented my work to be replicated by colleagues and trained members of other trains on proper implementation.\"\r\n\t}\r\n];\r\n\r\nexport default internships;\r\n","import React from \"react\";\r\nimport { Box, Typography, Grid, Card, CardContent } from \"@material-ui/core\";\r\nimport { blue } from \"@material-ui/core/colors\";\r\nimport TopBar from \"./layout/TopBar\";\r\nimport internships from \"./content/internships\";\r\nimport Profile from \"./images/Burger.jpg\";\r\nimport colors from \"./content/colors\";\r\nlet AboutPage = () => {\r\n\treturn (\r\n\t\t<Box className=\"about-page\" style={{ backgroundColor: `${colors.light}` }}>\r\n\t\t\t<TopBar />\r\n\t\t\t<Box p={2}>\r\n\t\t\t\t<Grid container spacing={2} justify=\"flex-end\">\r\n\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t<Typography\r\n\t\t\t\t\t\t\tclassName=\"cascadia\"\r\n\t\t\t\t\t\t\tstyle={{ textAlign: \"center\" }}\r\n\t\t\t\t\t\t\tvariant=\"h4\"\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tAbout me\r\n\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} md={4}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\">Education</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">\r\n\t\t\t\t\t\t\t\t\tUniversity of Massachusetts Amherst\r\n\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"body1\">Graduated 2020</Typography>\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t<Box style={{ width: 'inherit', overflow: 'hidden' }}>\r\n\t\t\t\t\t\t\t<Card style={{\r\n\t\t\t\t\t\t\t\tmarginTop: \"16px\",\r\n\t\t\t\t\t\t\t\twidth: 'inherit',\r\n\t\t\t\t\t\t\t\tfloat: 'right'\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Box\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\theight: \"400px\",\r\n\t\t\t\t\t\t\t\t\t\twidth: \"inherit\",\r\n\t\t\t\t\t\t\t\t\t\tfloat: \"right\",\r\n\t\t\t\t\t\t\t\t\t\toverflow: 'hidden',\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<img\r\n\t\t\t\t\t\t\t\t\t\tstyle={{ height: \"inherit\", width: \"inherit\" }}\r\n\t\t\t\t\t\t\t\t\t\tsrc={Profile}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Grid item xs={12} md={8}>\r\n\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t<CardContent>\r\n\t\t\t\t\t\t\t\t<Typography variant=\"h5\"> Professional Experience</Typography>\r\n\t\t\t\t\t\t\t\t{internships.map(e => {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<Box>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"p\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t<b>{e.name}</b>\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography variant=\"p\"> - {e.position}</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<Typography display=\"block\" variant=\"p\">\r\n\t\t\t\t\t\t\t\t\t\t\t\t{e.desc}\r\n\t\t\t\t\t\t\t\t\t\t\t</Typography>\r\n\t\t\t\t\t\t\t\t\t\t\t<Box mb={2} />\r\n\t\t\t\t\t\t\t\t\t\t</Box>\r\n\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t</CardContent>\r\n\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</Grid>\r\n\t\t\t</Box>\r\n\t\t</Box>\r\n\t);\r\n};\r\n\r\nexport default AboutPage;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { Route, Switch, HashRouter as Router } from \"react-router-dom\";\r\nimport CopyApp from \"./CopyApp.js\";\r\nimport Projects from \"./Projects.js\";\r\nimport About from \"./About.js\";\r\nimport \"./fonts/Cascadia.ttf\";\r\nconst routing = (\r\n\t<Router>\r\n\t\t<Switch>\r\n\t\t\t<Route exact path=\"/\" component={App} />\r\n\t\t\t<Route path=\"/about\" component={About} />\r\n\t\t\t<Route path=\"/projects\" component={Projects} />\r\n\t\t</Switch>\r\n\t</Router>\r\n);\r\n\r\nReactDOM.render(routing, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}